XCAP_Client Module

Anca-Maria Vamanu

   voice-system.ro

Edited by

Anca-Maria Vamanu

   Copyright © 2007 voice-system.ro
     __________________________________________________________

   Table of Contents
   1. User's Guide

        1.1. Overview
        1.2. Dependencies

              1.2.1. OpenSER Modules
              1.2.2. External Libraries or Applications

        1.3. Exported Parameters

              1.3.1. db_url(str)
              1.3.2. xcap_table(str)
              1.3.3. periodical_query(int)
              1.3.4. query_period(int)
              1.3.5. Exported Functions
              1.3.6. Exported MI Functions

   2. Developer's Guide

        2.1. bind_xcap_api(xcap_api_t* api)
        2.2. get_elem
        2.3. register_xcb

   3. Frequently Asked Questions

   List of Examples
   1-1. Set db_url parameter
   1-2. Set xcap_table parameter
   1-3. Set periodical_query parameter
   1-4. Set query_period parameter
   2-1. xcap_api structure
     __________________________________________________________

Chapter 1. User's Guide

1.1. Overview

   The modules is an XCAP client for OpenSER that can be used by
   other modules. It fetches XCAP elements, either documents or
   part of them, by sending HTTP GET requests. It also offers
   support for conditional queries. It uses libcurl library as a
   client-side HTTP transfer library.

   The module offers an xcap client interface with general
   functions that allow requesting for an specific element from an
   xcap server. In addition to that it also offers the service of
   storing and update in database the documents it receives. In
   this case only an initial request to the module is required -
   xcapGetNewDoc-which is like a request to the module to handle
   from that point on the referenced document so as to promise
   that the newest version will always be present in database.

   The update method is also configurable, either through
   periodical queries, applicable to any kind of xcap server or
   with an MI command that should be sent by the server upon an
   update.

   The module is currently used by the presence_xml module, if the
   'integrated_xcap_server' parameter is not set.
     __________________________________________________________

1.2. Dependencies

1.2.1. OpenSER Modules

   The modules is not dependent of any OpenSER module.
     __________________________________________________________

1.2.2. External Libraries or Applications

   The following libraries or applications must be installed
   before running OpenSER with this module loaded:

     * libxml.
     * libcurl.
     __________________________________________________________

1.3. Exported Parameters

1.3.1. db_url(str)

   The database url.

   Default value is "NULL".

   Example 1-1. Set db_url parameter
...
modparam("xcap_client", "db_url",
        "mysql://openser:openserrw@192.168.2.132/openser")
...
     __________________________________________________________

1.3.2. xcap_table(str)

   The name of the db table where XCAP documents are stored.

   Default value is "xcap".

   Example 1-2. Set xcap_table parameter
...
modparam("xcap_client", "xcap_table", "xcaps")
...
     __________________________________________________________

1.3.3. periodical_query(int)

   A flag to disable periodical query as an update method for the
   documents the module is responsible for. It could be disabled
   when the xcap server is capable to send the exported MI command
   when a change occurs or when another module in OpenSER handles
   updates.

   To disable it set this parameter to 0.

   Default value is "1".

   Example 1-3. Set periodical_query parameter
...
modparam("xcap_client", "periodical_query", 0)
...
     __________________________________________________________

1.3.4. query_period(int)

   Should be set if periodical query is not disabled. Represents
   the time interval the xcap servers should be queried for an
   update

   To disable it set this parameter to 0.

   Default value is "100".

   Example 1-4. Set query_period parameter
...
modparam("xcap_client", "query_period", 50)
...
     __________________________________________________________

1.3.5. Exported Functions

   None to be used in configuration file.
     __________________________________________________________

1.3.6. Exported MI Functions

1.3.6.1. refreshXcapDoc

   MI command that should be sent by an xcap server when a stored
   document changes.

   Name: refreshXcapDoc

   Parameters:

     * document uri: the uri of the document
     * xcap server port: the port of the xcap server

   MI FIFO Command Format:
...
:refreshXcapDoc:fifo_reply
/xcap-root/resource-lists/users/eyebeam/buddies-resource-list.xml
8000
_empty_line_
...
     __________________________________________________________

Chapter 2. Developer's Guide

   The module exports a number of functions that allow selecting
   and retrieving an element from an xcap server and also
   registering a callback to be called when a MI command
   refreshXcapDoc is received and the document in question is
   retrieved.
     __________________________________________________________

2.1. bind_xcap_api(xcap_api_t* api)

   This function allows binding the needed functions.

   Example 2-1. xcap_api structure
...
typedef struct xcap_api {

        /* xcap node selection and retrieving functions*/
        xcap_get_elem_t get_elem;
        xcap_nodeSel_init_t int_node_sel;
        xcap_nodeSel_add_step_t add_step;
        xcap_nodeSel_add_terminal_t add_terminal;
        xcap_nodeSel_free_t free_node_sel;
        xcapGetNewDoc_t getNewDoc; /* an initial request for the module
        fo fetch this document that does not exist in xcap db table
        and handle its update*/

        /* function to register a callback to document changes*/
        register_xcapcb_t register_xcb;
}xcap_api_t;
...
     __________________________________________________________

2.2. get_elem

   Field type:
...
typedef char* (*xcap_get_elem_t)(char* xcap_root,
xcap_doc_sel_t* doc_sel, xcap_node_sel_t* node_sel);
...

   This function sends a HTTP request and gets the specified
   information from the xcap server.

   The parameters signification:

     * xcap_root- the XCAP server address;
     * doc_sel- structure with document selection info;
Parameter type:
...
typedef struct xcap_doc_sel
{
        str auid; /* application defined Unique ID*/
        int type; /* the type of the path segment
                                after the AUID  which must either
                                be GLOBAL_TYPE (for "global") or
                                USERS_TYPE (for "users") */
        str xid; /* the XCAP User Identifier
                                if type is USERS_TYPE */
        str filename;
}xcap_doc_sel_t;
...
     * node_sel- structure with node selection info;
Parameter type:
...
typedef struct xcap_node_sel
{
        step_t* steps;
        step_t* last_step;
        int size;
        ns_list_t* ns_list;
        ns_list_t* last_ns;
        int ns_no;

}xcap_node_sel_t;

typedef struct step
{
        str val;
        struct step* next;
}step_t;

typedef struct ns_list
{
        int name;
        str value;
        struct ns_list* next;
}ns_list_t;
...

       The node selector is represented like a list of steps that
       will be represented in the path string separated by '/'
       signs. The namespaces for the nodes are stored also in a
       list, as an association of name and value, where the value
       is to be included in the respective string val field of the
       step.
       To construct the node structure the following functions in
       the xcap_api structure should be used: 'int_node_sel',
       'add_step' and if needed, 'add_terminal'.
       If the intention is to retrieve the whole document this
       argument must be NULL.
     __________________________________________________________

2.3. register_xcb

   Field type:
...
typedef int (*register_xcapcb_t)(int types, xcap_cb f);
...

   - 'types' parameter can have a combined value of PRES_RULES,
   RESOURCE_LIST, RLS_SERVICES and PIDF_MANIPULATION.

   -the callback function has type :
...
typedef int (xcap_cb)(int doc_type, str xid, char* doc);
...
     __________________________________________________________

Chapter 3. Frequently Asked Questions

   3.1. Where can I find more about OpenSER?
   3.2. Where can I post a question about this module?
   3.3. How can I report a bug?

   3.1. Where can I find more about OpenSER?

   Take a look at http://www.openser.org/.

   3.2. Where can I post a question about this module?

   First at all check if your question was already answered on one
   of our mailing lists:

     * User Mailing List -
       http://lists.openser.org/cgi-bin/mailman/listinfo/users
     * Developer Mailing List -
       http://lists.openser.org/cgi-bin/mailman/listinfo/devel

   E-mails regarding any stable OpenSER release should be sent to
   <users@lists.openser.org> and e-mails regarding development
   versions should be sent to <devel@lists.openser.org>.

   If you want to keep the mail private, send it to
   <team@lists.openser.org>.

   3.3. How can I report a bug?

   Please follow the guidelines provided at:
   http://sourceforge.net/tracker/?group_id=139143.
